# deployment secret
{{- if .Values.externalSecret }}
{{- range $appName, $appConfig := .Values.apps }}
{{- if $appConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ if $.Values.pr }}{{ $.Release.Name }}-{{ $appName | trimPrefix $.Release.Name | trimPrefix "-" }}{{ else }}{{ $appName }}{{ end }}
spec:
  refreshInterval: {{ $.Values.externalSecret.refreshInterval }}
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}
  target:
    name: {{ if $.Values.pr }}{{ $.Release.Name }}-{{ $appName | trimPrefix $.Release.Name | trimPrefix "-" }}{{ else }}{{ $appName }}{{ end }}
    creationPolicy: Owner
  data:
  {{- range $secret := $appConfig.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# job secret
{{- range $jobName, $jobConfig := .Values.jobs }}
{{- if $jobConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $jobName }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}                
  target:
    name: {{ $jobName }}
    creationPolicy: Owner
  data:
  {{- range $secret := $jobConfig.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# global secret
{{- if .Values.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Release.Name }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}                
  target:
    name: {{ .Release.Name }}
    creationPolicy: Owner
  data:
  {{- range $secret := .Values.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}

# Cronjob secrets
{{- range $cronjobName, $cronjobConfig := .Values.cronjobs -}}
# cronjob init container secret
{{- range $initContainer := $cronjobConfig.initContainers -}}
{{- if $initContainer.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $initContainer.name }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }} 
  target:
    name: {{ $initContainer.name }}
    creationPolicy: Owner
  data:
  {{- range $secret := $initContainer.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# cronjob container secret
{{- range $container := $cronjobConfig.containers -}}
{{- if $container.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $container.name }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}                
  target:
    name: {{ $container.name }}
    creationPolicy: Owner
  data:
  {{- range $secret := $container.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}

# cronjob global secret
{{- if $cronjobConfig.secrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $cronjobName }}
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ $.Values.externalSecret.secretStoreName }}                
  target:
    name: {{ $cronjobName }}
    creationPolicy: Owner
  data:
  {{- range $secret := $cronjobConfig.secrets }}
  - secretKey: {{ $secret }}
    remoteRef:
      {{- if eq $.Values.externalSecret.type "gcp" }}
      key: {{ $.Release.Name | upper }}_{{ $secret }}
      {{- end }}
      {{- if eq $.Values.externalSecret.type "vault" }}
      key: {{ $.Values.externalSecret.secretPath }}/{{ $.Release.Name }}
      property: {{ $secret }}
      {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}